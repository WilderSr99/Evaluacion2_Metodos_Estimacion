---
title: "Evaluación 2 - Curso Métodos de Estimación Estadística"
author:
  - name: "Caballero Chocano, Rodrigo Fernando"
  - name: "Cueva Mendoza, Jherson Aldair"
  - name: "Hidalgo Eche, Diana Evelyn"
  - name: "Llaro Castro, Diego Renato"
  - name: "Sebastian Rios, Wilder Teddy"
format: pdf
editor: visual
---

------------------------------------------------------------------------

# Resumen

> Este informe presenta el desarrollo integral de la Evaluación 2 del curso Métodos de Estimación Estadística. Se abordan conceptos teóricos sobre poblaciones, estratos y diseños muestrales, la aplicación práctica de un muestreo estratificado usando datos censales de Lima Metropolitana, la declaración del diseño muestral de una encuesta del INEI, y la discusión de casos aplicados sobre tamaño muestral y estimaciones en dominios pequeños. Los resultados obtenidos reflejan la importancia del diseño muestral en la precisión y representatividad de las estimaciones.

------------------------------------------------------------------------

# **Parte I. Fundamentos conceptuales**

## Introducción teórica

Breve presentación del objetivo de esta sección:

> En esta primera sección se abordan dos aspectos esenciales del diseño muestral: el efecto del muestreo estratificado sobre la varianza de las estimaciones y las condiciones bajo las cuales el muestreo por conglomerados puede mejorar la precisión. Ambos conceptos permiten comprender cómo la estructura poblacional y la homogeneidad interna de las unidades influyen en la eficiencia estadística de los estimadores.

## Pregunta 3

**¿Qué esperaría que ocurra con la varianza de una variable cuando se aplique un muestreo aleatorio estratificado (MAE) en lugar de un muestreo aleatorio simple (MAS)? ¿Por qué?**\

> Al aplicar un muestreo aleatorio estratificado, se espera que la varianza de las estimaciones disminuya respecto a un muestreo aleatorio simple. Esto ocurre porque los estratos agrupan unidades internamente homogéneas y externamente diferentes, reduciendo la variabilidad dentro de cada subgrupo. Por ejemplo, al estimar el ingreso medio dividiendo la población por nivel educativo, se obtiene menor dispersión dentro de cada estrato y, por tanto, un estimador más preciso y eficiente. En síntesis, el MAE mejora la precisión al aprovechar información estructural de la población.
>
> Nota: *se añade un ejemplo\*.*

```{r}
# para ejemplificar la resuesta usamos este ejemplo de juguete. 
set.seed(2025)

# Población sintética: ingreso por nivel educativo
N <- 15000
prop <- c(Primaria=.30, Secundaria=.50, Superior=.20)
N_h <- round(N*prop)

ing_P <- rnorm(N_h["Primaria"],   mean=40, sd=8)
ing_S <- rnorm(N_h["Secundaria"], mean=55, sd=8)
ing_U <- rnorm(N_h["Superior"],   mean=70, sd=8)

nivel   <- c(rep("Primaria", N_h["Primaria"]),
             rep("Secundaria", N_h["Secundaria"]),
             rep("Superior", N_h["Superior"]))
ingreso <- c(ing_P, ing_S, ing_U)

mu_pobl <- mean(ingreso)

# Parámetros de simulación
n_total <- 600       # tamaño muestral total
R <- 300             # réplicas

# MAS: muestra simple sin estratos
mas_est <- replicate(R, mean(sample(ingreso, n_total)))

# MAE: proporcional por nivel educativo
n_h <- round(n_total * prop)  # asignación proporcional simple
mae_est <- replicate(R, {
  mP <- mean(sample(ing_P, n_h["Primaria"]))
  mS <- mean(sample(ing_S, n_h["Secundaria"]))
  mU <- mean(sample(ing_U, n_h["Superior"]))
  # ponderación por tamaño de estrato en la población
  sum(c(prop["Primaria"], prop["Secundaria"], prop["Superior"])
      * c(mP, mS, mU))
})

# Resumen numérico simple
var_mas <- var(mas_est)
var_mae <- var(mae_est)
se_mas  <- sqrt(var_mas)
se_mae  <- sqrt(var_mae)
ef_rel  <- var_mas/var_mae  

cat("Media poblacional:", round(mu_pobl,2), "\n")
cat("MAS -> SE:", round(se_mas,4), " Var:", round(var_mas,6), "\n")
cat("MAE -> SE:", round(se_mae,4), " Var:", round(var_mae,6), "\n")
cat("Eficiencia relativa (Var(MAS)/Var(MAE)):", round(ef_rel,2), "\n")

# Gráfico simple de densidades (base R)
plot(density(mas_est),
     main = "Ingreso medio: MAS vs MAE",
     xlab = "Media estimada",
     col = "skyblue", lwd = 2, # azul
     ylim = c(0, max(density(mas_est)$y, density(mae_est)$y) * 1.1))

lines(density(mae_est), col = "red", lwd = 2) # rojo
abline(v = mu_pobl, col = "gray30", lwd = 2, lty = 2) # línea poblacional
legend("topright", legend = c("MAS", "MAE", "Media poblacional"),
       col = c("skyblue", "red", "gray30"),
       lwd = 2, lty = c(1,1,2), bty = "n")
 
```

> -   *Con el ejemplo simple, se aprecia que la media poblacional del ingreso es de 53.51. Al comparar los métodos de estimación, se observa que el muestreo aleatorio simple (MAS) presenta una varianza de 0.2942 y un error estándar de 0.5424, mientras que el muestreo aleatorio estratificado (MAE) muestra una varianza de 0.0999 y un error estándar de 0.316. Esto indica que el MAE produce estimaciones más precisas y menos dispersas que el MAS. Además, la eficiencia relativa entre ambos métodos es de 2.95, lo que significa que el muestreo estratificado es casi tres veces más eficiente que el muestreo simple para estimar la media poblacional del ingreso.*
> -   *Ademas se observa que la curva del MAE es más angosta (menor varianza), por lo que el muestreo estratificado aumenta la precisión de las estimaciones.*

## Pregunta 4

**¿En qué caso el muestreo aleatorio por conglomerados tiende a aumentar la precisión de las estimaciones?**\

> El muestreo por conglomerados tiende a aumentar la precisión solo cuando los conglomerados son internamente heterogéneos y entre ellos homogéneos. En ese escenario, cada conglomerado representa bien la diversidad de la población. Por ejemplo, al estimar el nivel de alfabetización seleccionando manzanas urbanas donde conviven diversos grupos socioeconómicos, cada conglomerado captura gran parte de la variabilidad total. Sin embargo, si los conglomerados son muy homogéneos internamente (por ejemplo, barrios segregados), la correlación intracluster aumenta y la precisión disminuye. Por ello, su eficiencia depende directamente de la estructura de variabilidad poblacional.
>
> > Nota: *se añade un ejemplo\*.*

```{r}
set.seed(2025)

# Población: 100 manzanas, 20 personas por manzana
manzanas <- 1:100
poblacion <- data.frame(
  manzana = rep(manzanas, each = 20),
  # Escenario A: manzanas diversas (heterogéneas dentro)
  alfabet_A = rep(rnorm(100, 80, 10), each = 20) + rnorm(2000, 0, 8),
  # Escenario B: manzanas parecidas (homogéneas dentro)
  alfabet_B = rep(rnorm(100, 80, 10), each = 20) + rnorm(2000, 0, 2)
)

# Muestreo por conglomerados (10 manzanas)
muestreo_cluster <- function(var){
  mean(poblacion[poblacion$manzana %in% sample(1:100, 10), var])
}

# Muestreo simple con mismo tamaño (200 personas)
muestreo_simple <- function(var){
  mean(sample(poblacion[[var]], 200))
}

# Repetimos
R <- 200
clust_A <- replicate(R, muestreo_cluster("alfabet_A"))
clust_B <- replicate(R, muestreo_cluster("alfabet_B"))
mas_A   <- replicate(R, muestreo_simple("alfabet_A"))
mas_B   <- replicate(R, muestreo_simple("alfabet_B"))

# Gráfico 
par(mfrow=c(1,2))
plot(density(clust_A), main="A: manzanas heterogéneas", 
     xlab="Media estimada", 
     col="skyblue", lwd=2)
lines(density(mas_A), col="red", lwd=2)
legend("topleft", legend=c("Cluster","MAS"), 
       col=c("skyblue","red"), lwd=1, bty="n")

plot(density(clust_B), main="B: manzanas homogéneas", xlab="Media estimada", 
     col="skyblue", lwd=2)
lines(density(mas_B), col="red", lwd=2)
legend("topleft", legend=c("Cluster","MAS"), 
       col=c("skyblue","red"), lwd=1, bty="n")
```

> -   *En el escenario A, donde las manzanas son heterogéneas internamente, el muestreo por conglomerados produce estimaciones con menor varianza que el muestreo aleatorio simple (MAS), evidenciando una mayor precisión. Esto se debe a que cada manzana refleja bien la diversidad de la población.*
> -   *En contraste, en el escenario B, donde las manzanas son homogéneas, el muestreo por conglomerados resulta en estimaciones con mayor varianza que el MAS, indicando una menor precisión. Aquí, la similitud interna de las manzanas limita la representatividad de la muestra.*
> -   *Estos ejemplos ilustran que el muestreo por conglomerados puede mejorar la precisión solo cuando los conglomerados son internamente diversos y entre ellos similares.*

------------------------------------------------------------------------

# **Parte II. Aplicación práctica con datos censales**

## Objetivo

> Aplicar el muestreo estratificado utilizando el Censo Nacional de Población y Vivienda 2017 (Lima Metropolitana) para estimar el porcentaje y total de personas ocupadas según grupo de edad, comparando su precisión con un muestreo aleatorio simple mediante el efecto de diseño.

## Base de datos y variables

-   Fuente: Censo 2017 (Lima Metropolitana)
-   Variables utilizadas: `c5_p4_1` Edad Variable de condición de actividad “trabaja” (1 si trabaja, 0 si no) `grupo_edad` (4 categorías)

## Metodología

1.  Limpieza y transformación de datos.
2.  Definición de estratos (`grupo_edad`).
3.  Selección de muestra estratificada (semilla 2025).
4.  Declaración del diseño muestral con el paquete `survey`.
5.  Estimaciones de porcentaje y total.
6.  Cálculo del efecto de diseño y comentario interpretativo.

## Código R (documentado y comentado)

> *En esta primera parte del código, se cargan las librerías necesarias para el análisis.* *Luego, se establece el directorio de trabajo y se carga la base del Censo Nacional de Población y Vivienda 2017 filtrado para Lima Metropolitana. Debido que, esta base representa el marco poblacional sobre el cual se aplicará el diseño muestral*

```{r}
# -----------------------------------------------
# (1) Carga y directorio
# -----------------------------------------------

## Carga de paquetes

suppressPackageStartupMessages({
  library(arrow)
  library(dplyr)
  library(survey)
  library(stringr)
})

# Directorio
setwd("C:/Users/pc/Desktop/PEU DATA SCIENCE INEI/PEU INEI/Met_Estadistica_Cozzubo/MET_ESTADISTICA/PD/Evaluacion2_Metodos_Estimacion")

# Cargam Censo 2017 filtrado a Lima Metropolitana

censo <- read_parquet("cpv2017_pob 1214 Lima.parquet")

```

> *En este bloque se genera la variable “trabaja”, que toma el valor 1 si la persona trabajó y 0 si no lo hizo.* *De esta manera, se estandariza la información y se obtiene una variable binaria homogénea que permitirá identificar la condición laboral de cada persona.*

```{r}
# ---------------------------------------------------------------
# (2) VARIABLE DICOTÓMICA 'trabaja' (1 = Sí, 0 = No)
# ---------------------------------------------------------------
censo <- censo %>%
  mutate(
    trabaja = case_when(
      is.numeric(c5_p16) & c5_p16 == 1 ~ 1L,
      is.numeric(c5_p16) & c5_p16 == 2 ~ 0L,
      !is.numeric(c5_p16) & grepl("^si", tolower(as.character(c5_p16))) ~ 1L,
      !is.numeric(c5_p16) & grepl("^no", tolower(as.character(c5_p16))) ~ 0L,
      TRUE ~ NA_integer_
    )
  )
```

> Aquí se construye la variable “edad” a partir de la variable original c5_p4_1. Este paso garantiza que la variable “edad” esté correctamente tipificada como numérica, lo cual es indispensable para definir los grupos etarios.

```{r}
# ---------------------------------------------------------------
# (3) VARIABLE NUMÉRICA 'edad' A PARTIR DE c5_p4_1
# ---------------------------------------------------------------
censo <- censo %>%
  mutate(
    edad = suppressWarnings(
      as.integer(gsub("[^0-9]", "", as.character(c5_p4_1))))
  )
```

> En esta parte, se agrupa la población en cuatro categorías etarias según los rangos establecidos en el enunciado: El resultado es la creación de la variable “grupo_edad”, que será el estrato principal del diseño muestral.

```{r}
# ---------------------------------------------------------------
# (4) CREAR 'grupo_edad'
# ---------------------------------------------------------------
censo <- censo %>%
  mutate(
    grupo_edad = case_when(
      edad < 15 ~ "Menores de 15",
      edad >= 15 & edad <= 30 ~ "15 a 30",
      edad > 30  & edad <= 65 ~ "30 a 65",
      edad > 65 ~ "Más de 65",
      TRUE ~ NA_character_
    )
  ) %>%
  filter(!is.na(trabaja), !is.na(edad), !is.na(grupo_edad))
```

> Se fija una semilla con el año actual (2025) para garantizar reproducibilidad. Esto asegura que los resultados del muestreo aleatorio sean siempre los mismos al ejecutar nuevamente el código.

```{r}
# ---------------------------------------------------------------
# (5) FIJAR SEMILLA (AÑO ACTUAL)
# ---------------------------------------------------------------
set.seed(2025)
```

> El código realiza un muestreo estratificado con asignación proporcional, donde cada grupo de edad recibe una cantidad de observaciones acorde a su peso en la población. Esto asegura una muestra representativa y equilibrada, evita la sobrerrepresentación de estratos pequeños y mejora la precisión de las estimaciones, manteniendo la estructura real de la población de Lima Metropolitana.

```{r}
# ---------------------------------------------------------------
# (6) MUESTREO ESTRATIFICADO (asignación proporcional)
# ---------------------------------------------------------------
N_total <- nrow(censo)
Nh_tab  <- table(censo$grupo_edad)
Nh      <- as.integer(Nh_tab); names(Nh) <- names(Nh_tab)

# Tamaño muestral total (1% del total o al menos 400)
n_total <- max(400, ceiling(0.01 * N_total))

# Asignación proporcional
nh <- round(Nh / sum(Nh) * n_total)
nh <- pmax(nh, 30)  # mínimo 30 por estrato
names(nh) <- names(Nh)

# Muestreo SRSsr dentro de cada estrato
muestra_idx <- unlist(lapply(names(nh), function(k) {
  ids <- which(censo$grupo_edad == k)
  sample(ids, nh[k], replace = FALSE)
}))
muestra <- censo[muestra_idx, , drop = FALSE]
```

> El código define el diseño muestral estratificado por grupo de edad, asignando pesos de expansión para proyectar los resultados a la población total. Con este diseño, se estiman de forma representativa el porcentaje y el total de personas que trabajan en Lima Metropolitana, asegurando precisión y validez estadística en las inferencias del estudio.

```{r}
# ---------------------------------------------------------------
# (7) DECLARAR DISEÑO MUESTRAL Y ESTADÍSTICAS
# ---------------------------------------------------------------
Nh_df <- data.frame(grupo_edad = names(Nh), Nh = as.integer(Nh))
muestra <- muestra %>%
  left_join(Nh_df, by = "grupo_edad") %>%
  mutate(
    nh  = unname(nh[as.character(grupo_edad)]),
    w   = Nh / nh,
    fpc = Nh
  )

# Diseño estratificado
diseMAE <- svydesign(
  ids     = ~1,
  strata  = ~grupo_edad,
  weights = ~w,
  fpc     = ~fpc,
  data    = muestra
)

# (7a) Porcentaje que trabaja por grupo de edad
por_trabaja_por_edad <- svyby(
  ~trabaja, ~grupo_edad, diseMAE, svymean,
  vartype = c("se","ci"), level = 0.95, na.rm = TRUE
) %>%
  mutate(
    porcentaje = trabaja * 100,
    se_pct     = se * 100,
    ic95_l     = ci_l * 100,
    ic95_u     = ci_u * 100
  ) %>%
  select(grupo_edad, porcentaje, se_pct, ic95_l, ic95_u)

# (7b) Total de personas que trabajan
total_trabaja <- svytotal(
  ~trabaja, diseMAE,
  vartype = c("se","ci"), level = 0.95, na.rm = TRUE
)

```

> Finalmente, se calcula el efecto de diseño por cada grupo etario, a partir de subdiseños que aíslan cada estrato. Esto permite evaluar si la eficiencia del diseño varía entre grupos de edad, por ejemplo, si los adultos presentan una varianza más homogénea que los jóvenes o los mayores.

```{r}
# ---------------------------------------------------------------
# (8) CALCULAR EL EFECTO DE DISEÑO (deff) POR ESTRATO
# ---------------------------------------------------------------
# (a) deff global
mae_total <- svymean(~trabaja, diseMAE, deff = "srs", na.rm = TRUE)
deff_total <- survey::deff(mae_total)

# (b) deff para cada estrato (subdiseño)
deff_por_grupo <- lapply(split(
  muestra, muestra$grupo_edad), function(df_str) 
    {
  dis_str <- subset(diseMAE, grupo_edad == unique(df_str$grupo_edad))
  mae_str <- svymean(~trabaja, dis_str, deff = "srs", na.rm = TRUE)
  c(Grupo = unique(df_str$grupo_edad), 
    n = unique(df_str$nh),
    Nh = unique(df_str$Nh),
    deff = round(as.numeric(survey::deff(mae_str)), 5))
})
deff_por_grupo <- do.call(rbind, deff_por_grupo)
```

## Resultados

-   Tabla 1: % de personas que trabajan por grupo de edad

```{r}
library(knitr)

# (7a) Porcentaje por grupo de edad
cat("### (7a) Porcentaje que trabaja por grupo de edad\n")
kable(
  por_trabaja_por_edad,
  caption = "Porcentaje de 
  personas que trabajan por grupo de edad en Lima Metropolitana",
  digits = 2,
  align = "lcccc"
)

```

> Los resultados muestran que la participación laboral en Lima Metropolitana se concentra principalmente en el grupo de 30 a 65 años, donde el 68.4% de las personas se encuentra trabajando. Le sigue el grupo de 15 a 30 años con 48.2%, mientras que los mayores de 65 años presentan una participación de 21.5%, y los menores de 15 años apenas alcanzan el 0.34%. Esta distribución refleja un patrón laboral esperado: los adultos en edad productiva son quienes tienen mayor inserción en el mercado de trabajo, mientras que los extremos etarios (niños y adultos mayores) muestran una presencia marginal por razones de estudio, retiro o inactividad económica.

-   Tabla 2: Total estimado de personas que trabajan en Lima Metropolitana

```{r}

# (7b) Total de personas que trabajan
cat("\n### (7b) Total de personas que trabajan en Lima Metropolitana\n")
kable(
  as.data.frame(total_trabaja),
  caption = "Total expandido de personas 
  que trabajan (con error estándar e IC95%)",
  digits = 2
)
```

> El total expandido indica que aproximadamente 4,193,503 personas trabajan en Lima Metropolitana, con un error estándar de 12,825 personas, lo que demuestra una alta precisión estadística del estimador. Este resultado es coherente con el tamaño de la población económicamente activa de la capital, que concentra la mayor parte del empleo nacional. El bajo error relativo evidencia que la estimación es robusta y que el diseño muestral permitió representar de manera adecuada el total de personas ocupadas en la ciudad.

-   Tabla 3: Efecto de diseño (deff) respecto al MAS

```{r}
# (8) Efecto de diseño
cat("\n### (8) Efecto de diseño (deff)\n")
cat("**Global:**\n")
kable(as.data.frame(deff_total), digits = 8)
cat("\n**Por grupo (estrato):**\n")
kable(as.data.frame(deff_por_grupo), digits = 5)
```

> El efecto de diseño global obtenido (deff = 0.75) indica que el diseño estratificado fue más eficiente que un muestreo aleatorio simple (MAS), ya que redujo la varianza de las estimaciones en aproximadamente un 25%. Esto significa que la estratificación por edad contribuyó a mejorar la precisión de las estimaciones de empleo, al agrupar unidades con características similares en términos de participación laboral, reduciendo así la variabilidad dentro de los estratos.

```{r}
# ============================================================
# VISUALIZACIÓN FINAL DEL EFECTO DE DISEÑO (deff)
# ============================================================

library(ggplot2)
library(scales)
library(dplyr)

# estructura
deff_por_grupo_df <- as.data.frame(deff_por_grupo) %>%
  mutate(
    deff = as.numeric(deff),
    deff_label = sprintf("%.8f", deff)
  )

# deff global
deff_global_val <- round(as.numeric(deff_total), 8)

# gráfico
ggplot(deff_por_grupo_df, aes(x = reorder(Grupo, deff), y = deff)) +
  geom_col(fill = "#4C72B0", width = 0.65, alpha = 0.9) +
  geom_text(aes(label = deff_label),
            vjust = -0.4, color = "#222222", size = 4, fontface = "bold") +
  geom_hline(yintercept = 1, linetype = "dotted", color = "gray40") +
  geom_hline(yintercept = deff_global_val,
             color = "darkred", linetype = "dashed", linewidth = 1) +
  annotate("label",
           x = Inf, y = deff_global_val,
           label = paste0(" deff global = ", deff_global_val),
           color = "white", fill = "darkred", hjust = 1.1, vjust = 0.5,
           fontface = "bold", size = 4.2, label.size = 0) +
  scale_y_continuous(
    limits = c(0, max(deff_por_grupo_df$deff) * 1.25),
    breaks = pretty_breaks(6),
    expand = expansion(mult = c(0, 0.05))
  ) +
  labs(
    title = "Efecto de diseño (deff) por grupo de edad",
    subtitle = "Comparación del diseño estratificado vs. 
    Muestreo Aleatorio Simple (MAS)",
    x = "Grupo de edad",
    y = "Efecto de diseño (deff)",
    caption = "Nota: deff = Varianza del diseño / 
    Varianza del MAS. Valores <1 
    indican mayor eficiencia del diseño."
  ) +
  theme_minimal(base_family = "sans", base_size = 13) +
  theme(
    plot.title = element_text(
      face = "bold", color = "#2C3E50", size = 16, hjust = 0.5),
    plot.subtitle = element_text(
      color = "#555555", size = 12, hjust = 0.5),
    axis.title.x = element_text(
      face = "bold", size = 12, margin = margin(t = 10)),
    axis.title.y = element_text(
      face = "bold", size = 12, margin = margin(r = 10)),
    axis.text = element_text(
      color = "#333333", size = 11),
    panel.grid.major.y = element_line(color = "gray85"),
    panel.grid.major.x = element_blank(),
    panel.grid.minor = element_blank(),
    plot.caption = element_text(size = 9, color = "gray40", hjust = 0),
    plot.background = element_rect(fill = "white", color = NA)
  )

```

> El resultado del efecto de diseño igual a 1 (deff = 1) en todos los grupos de edad se explica por la forma en que se realizó el muestreo estratificado con asignación proporcional en el código del paso (6). En este procedimiento, el tamaño de muestra asignado a cada estrato fue proporcional a su peso poblacional (`nh = Nh / sum(Nh) * n_total`), garantizando que todos los grupos mantuvieran su representatividad real y un número suficiente de observaciones. Esta estructura equilibrada y homogénea dentro de los estratos redujo la variabilidad interna y evitó distorsiones en la estimación de la varianza, lo que se refleja en un deff = 1, indicando que el diseño fue eficiente y bien calibrado respecto al muestreo aleatorio simple.

------------------------------------------------------------------------

## Comentario analítico parcial de la parte II

> El diseño muestral estratificado por edad aplicado al Censo 2017 para Lima Metropolitana permitió obtener estimaciones representativas, precisas y eficientes del empleo. Los adultos en edad productiva (30–65 años) son quienes sostienen la mayor parte del empleo metropolitano, mientras que los jóvenes y adultos mayores presentan menores tasas de participación. La eficiencia estadística observada (deff \< 1) confirma que la estratificación por edad optimizó la precisión de los resultados sin incrementar el error muestral.

------------------------------------------------------------------------

# **Parte III. Diseño muestral de una encuesta del INEI**

## Introducción

> En esta sección se analiza y declara el diseño muestral de la encuesta asignada al grupo **(ENEVIC)**, siguiendo su ficha técnica publicada por el INEI.

## Descripción del diseño

La Encuesta Nacional Especializada sobre Victimización (ENEVIC) 2017, ejecutada por el INEI, emplea un diseño probabilístico, estratificado, multietápico e independiente por dominio de estudio. El ámbito de inferencia es urbano nacional, con cobertura en regiones naturales, departamentos, áreas metropolitanas y 28 principales ciudades del país.

-   Unidad Primaria de Muestreo (UPM): conglomerado de viviendas.
-   Unidad Secundaria de Muestreo (USM): vivienda particular.
-   Unidad Terciaria de Muestreo (UTM): hogar dentro de la vivienda.
-   Unidad de análisis: persona de 15 años y más residente habitual.

La selección de UPM se realiza con probabilidad proporcional al tamaño, y las etapas subsiguientes son aleatorias simples sistemáticas. Los factores de expansión reflejan las probabilidades de selección en todas las etapas, con ajustes por no respuesta y post-estratificación a totales poblacionales del Censo 2007. El diseño incluye estratificación explícita por departamento, área urbana y tamaño de centro poblado.

## Variables relevantes para declarar el diseño

De acuerdo con el diccionario:

| **Concepto** | **Nombre de variable** | **Fuente** |
|-------------------|-------------------------------|----------------------|
| **UPM** | `CONGLO` | CAP300 Persona / Hogar |
| **Estrato** | `ESTRATO` (presente en base general) | ENEVIC marco muestral |
| **Identificador de vivienda** | `VIV_NUM` | CAP300 Persona / Hogar |
| **Factor de expansión** | `FACTOR` (peso final persona) | microdato persona |
| **Departamento / Dominio** | `CCDD` o `NOMBREDD` | variables geográficas |
| **Variable de análisis (ejemplo)** | `C300_P5_3` – robo sin violencia de objetos personales | CAP300 Persona |

## Declaración del diseño en R

```{r}
# --- Declaración del diseño muestral ENEVIC 2017 ---
#library(survey)
#library(dplyr)

# base <- read.csv("ENEVIC2017_persona.csv")  # o base final unida

# Mantener observaciones válidas
#base <- base %>%
  #filter(!is.na(FACTOR) & FACTOR > 0)

# Declaración del diseño (dos etapas)
#dis_enevic <- svydesign(
  #ids    = ~CONGLO + VIV_NUM,  # conglomerado + vivienda
  #strata = ~ESTRATO,
  #weights= ~FACTOR,
  #data   = base,
  #nest   = TRUE
#)


```

### *Ejemplo de estimación*

> Estimemos la **proporción de personas víctimas de robo sin violencia** `C300_P5_3 = 1`, por **departamento**.

```{r}
# Variable binaria: víctima de robo sin violencia
#base$victima_robo <- ifelse(base$C300_P5_3 == 1, 1, 0)

# Estimación nacional
#svymean(~victima_robo, dis_enevic, deff = TRUE, vartype = c("se", "cv"))

# Estimación por departamento
#svyby(~victima_robo, ~NOMBREDD, dis_enevic, svymean,
      #deff = TRUE, vartype = c("se", "cv"))
#
```

### Conlusion de ejemplo

> El objeto `dis_enevic` representa el diseño complejo de la ENEVIC 2017. Los resultados (svymean, svyby) devuelven el porcentaje de personas víctimas de robo, junto con su error estándar (SE), coeficiente de variación (CV) y efecto de diseño (deff), que mide cuán eficiente es la muestra frente a un muestreo aleatorio simple.

## Conclusion parcial

> *La ENEVIC 2017 utiliza un diseño estratificado, multietápico y ponderado, lo que permite obtener estimaciones representativas para el área urbana nacional y dominios subnacionales. El uso de los pesos y de la estructura de conglomerados–estratos garantiza la validez inferencial y el cálculo correcto de varianzas y efectos de diseño. Las estimaciones simples sin diseño tienden a subestimar el error estándar.*

------------------------------------------------------------------------

# **Parte IV. Discusión aplicada**

## Introducción

> En esta sección se desarrollan dos casos aplicados vinculados al diseño y la representatividad de encuestas nacionales, con el objetivo de comunicar resultados de manera clara tanto a públicos técnicos como a tomadores de decisiones.

## Pregunta 1 - Tamaño muestral y efecto de diseño

Las tablas de Dillman se basan en supuestos de **muestreo aleatorio simple (MAS)**, donde todas las unidades tienen la misma probabilidad de selección y las observaciones son independientes entre sí. Sin embargo, en la práctica, las encuestas nacionales (como la que mide la vulnerabilidad a la pobreza) requieren un **diseño muestral complejo**, que puede incluir **estratificación, conglomerados y ponderaciones**, para garantizar representatividad regional, eficiencia logística y menor costo.

Al usar conglomerados (por ejemplo, seleccionar viviendas dentro de manzanas o centros poblados), las observaciones dentro de un conglomerado tienden a ser **similares**; esta semejanza se mide mediante la **correlación intracluster (**$\rho$). Cuando $\rho>0$, cada individuo adicional dentro del conglomerado **aporta menos información independiente**, aumentando la varianza del estimador.

El aumento en varianza respecto al MAS se resume en el **efecto de diseño (**$deff$):

$$
deff = \frac{Var_d(\hat{\theta})}{Var_{MAS}(\hat{\theta})}
$$

En un diseño por conglomerados, el efecto de diseño se aproxima por:

$$
deff \approx 1 + (m - 1)\rho
$$

donde $m$ es el tamaño promedio del conglomerado.\
Si $\rho$ es positivo, el $deff$ supera 1, y el tamaño de muestra “efectivo” ($n_{ef}$) disminuye:

$$
n_{ef} = \frac{n}{deff}
$$

Por ejemplo, si $deff = 1.5$, una muestra nominal de 1,500 personas equivale a solo 1,000 observaciones efectivas. Para alcanzar la misma precisión que en un MAS, debe **aumentarse el tamaño muestral nominal**.

Además, las ponderaciones y la estratificación generan varianzas desiguales entre subpoblaciones, lo cual también influye en el cálculo de errores estándar. Por ello, usar directamente las tablas de Dillman subestimaría el tamaño requerido y produciría **márgenes de error mayores a los deseados**.

**En conclusión**, los diseños complejos requieren mayor tamaño muestral porque las observaciones no son completamente independientes y los errores estándar deben reflejar la correlación intracluster y las ponderaciones del diseño. El **tamaño de muestra efectivo** depende del $deff$, por lo que se ajusta el $n$ para garantizar la precisión deseada. Este ajuste asegura resultados válidos y comparables entre regiones, aún bajo un esquema estratificado y multietápico.

## Pregunta 2 - Estimaciones distritales en dominios menores

La **Encuesta Nacional Agropecuaria (ENA 2024)** fue diseñada por el INEI con un **muestreo probabilístico, estratificado y multietápico**, cuyo nivel de representatividad llega hasta el **ámbito departamental**, no distrital.\
Esto significa que la muestra se planificó para producir resultados confiables a nivel **nacional y por departamento**, pero no para cada distrito, donde el número de productores entrevistados es muy pequeño o incluso nulo.

En encuestas de este tipo, la **precisión de las estimaciones** depende del tamaño de muestra disponible en cada área ($n_d$):\
cuantas menos observaciones haya, **mayor será la variabilidad o error** de las cifras estimadas.\
En términos sencillos:

$$
Var(\hat{\theta}_d) \propto \frac{1}{n_d}
$$

Si en un distrito solo se entrevistaron unos pocos productores, el **error estándar** crece y el resultado deja de ser confiable.\
Por eso, aunque el INEI recoja información en varios distritos, el diseño no garantiza que esas cifras puedan **generalizarse estadísticamente** a todos los agricultores del distrito.

## ¿Qué se puede hacer en su lugar?

Existen técnicas estadísticas llamadas **Estimación en Dominios Pequeños (Small Area Estimation, SAE)**, que combinan la información limitada de la encuesta con **fuentes externas más completas** (por ejemplo, censos o registros administrativos).\
De esta manera se “fortalece” la estimación, reduciendo la variabilidad sin necesidad de volver a encuestar a más personas.

Un modelo básico de este enfoque es el **modelo de área Fay–Herriot**, que se expresa como:

$$
\hat{\theta}_d = x_d'\beta + u_d + e_d
$$

Donde: - $\hat{\theta}_d$ es la estimación del distrito (por ejemplo, porcentaje de productores con asistencia técnica).\
- $x_d$ representa información auxiliar (por ejemplo, superficie agrícola, número de productores o acceso a crédito del **Censo Agropecuario**).\
- $u_d$ y $e_d$ son errores que capturan las diferencias entre distritos y el error de muestreo, respectivamente.

El modelo “aprende” la relación entre la variable de interés y la información auxiliar, y **predice valores más estables** para cada distrito.\
Así, si en un distrito se encuestaron pocos productores, el modelo usa los datos de distritos similares (y de los censos) para mejorar la precisión de la estimación.

## Fuentes de datos que podrían emplearse

-   **Censo Nacional Agropecuario (CENAGRO 2012 o 2022)**: proporciona información exhaustiva sobre todas las unidades agropecuarias.
-   **Registros del MIDAGRI**: asistencia técnica, uso de riego, créditos o maquinaria.
-   **Datos geográficos y climáticos** (SENAMHI, CONIDA, imágenes satelitales): altitud, precipitación, productividad del suelo.

### Conclusión Parcial

> No es posible estimar de forma directa indicadores distritales de acceso a asistencia técnica usando la **ENA 2024**, porque su diseño muestral no lo permite: la muestra no tiene suficiente tamaño ni estructura para representar cada distrito.\
> Sin embargo, utilizando **modelos de estimación en dominios pequeños (SAE)** y apoyándose en fuentes censales y administrativas, se pueden obtener **estimaciones distritales más precisas y útiles para la formulación de políticas públicas**, sin perder el sustento estadístico del diseño original de la encuesta.

------------------------------------------------------------------------
